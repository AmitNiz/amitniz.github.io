<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Research Blog</title>
    <link>https://amitniz.github.io/posts/</link>
    <description>Recent content in Posts on My Research Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Sep 2023 09:54:07 +0300</lastBuildDate><atom:link href="https://amitniz.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TUN/TAP devices in 5 Minute</title>
      <link>https://amitniz.github.io/posts/understanding_tuntap/</link>
      <pubDate>Fri, 15 Sep 2023 09:54:07 +0300</pubDate>
      
      <guid>https://amitniz.github.io/posts/understanding_tuntap/</guid>
      <description>In UNIX systems TUN/TAP devices are a mechanism that allows to create a virtual, software based networking devices.
TAP devices are layer 2 devices which means that they act as Ethernet devices. TAP devices are often used for virtualize network connection to VMs physical network.
TUN devices (Tunnel) are layer 3 devices which means they live at the IP level. TUN devices are often used for routing IP packets and creating virtual point-to-point network connections, i.</description>
    </item>
    
    <item>
      <title>Hooking Android Applications With Frida</title>
      <link>https://amitniz.github.io/posts/hooking_android_with_frida/</link>
      <pubDate>Mon, 23 May 2022 18:23:20 +0300</pubDate>
      
      <guid>https://amitniz.github.io/posts/hooking_android_with_frida/</guid>
      <description>Today I&amp;rsquo;m going to talk about a very powerful binary instrumentation toolkit named Frida,
And use it to investigate and solve an android crackme app.
Note: I&amp;rsquo;m going to assume that you already know how to connect to an android device or emulator via adb.
What is Frida? Frida is a binary intrumentation toolkit, that lets you inject JS code or your own library into native apps on almost every possible platform (Window, MacOs, Linux, IOS, Android and QNX).</description>
    </item>
    
    <item>
      <title>How Emotet Downloader Hides Its Payload</title>
      <link>https://amitniz.github.io/posts/investigating_emotet/</link>
      <pubDate>Sat, 21 May 2022 01:11:25 +0300</pubDate>
      
      <guid>https://amitniz.github.io/posts/investigating_emotet/</guid>
      <description>This week I came a cross a new version of Emotet. As I was trying to figure how the attack chain accures, I found this malicious excel document that is being used as a downloader of the sample.
So I download the maldoc and run olevba to dump the macros, but nothing was found.
Interesting.. Ok, Let&amp;rsquo;s find out what is going on.
SHA1: 3fabbc9d0dbf064dbe1ca4ca8bed8324febc7ca9 Some Background Emotet is an advanced, self-propagating and modular Trojan That made its first appearance at 2014.</description>
    </item>
    
    <item>
      <title>Unpacking UPX</title>
      <link>https://amitniz.github.io/posts/unpacking_upx/</link>
      <pubDate>Fri, 15 Apr 2022 12:19:38 +0300</pubDate>
      
      <guid>https://amitniz.github.io/posts/unpacking_upx/</guid>
      <description>In this article I will cover how the UPX packer works and how to manually unpack it.
For the purpose of demonstration I will unpack a sample of the infamous conti ransomware, which we see a lot in the wild these days, and is using UPX packer.
What is UPX? UPX (the Ultimate Packer for Executables) is an open-source packer, based on the UCL compression algorithm. It is a very common and well known packer, which is also considered to be an easy one to unpack.</description>
    </item>
    
    <item>
      <title>Gomorrah Stealer</title>
      <link>https://amitniz.github.io/posts/gomorrah_stealer/</link>
      <pubDate>Thu, 31 Mar 2022 23:46:38 +0300</pubDate>
      
      <guid>https://amitniz.github.io/posts/gomorrah_stealer/</guid>
      <description>A new version of cracked Gomorrah builder was leaked today so I thought this might be a good subject for my first publication on this blog.
sha1:31da10dc30dc6a785fa71e9433feffef7e58e8a6
Some Background Gomorrah is a stealer that made its first appearance around March 2020. its written in a .NET language and almost doesn&amp;rsquo;t use any obfuscation or anti-debugging techniques, thus making it fairly easy to reverse and analyze it.
First Look After executing the builder we can see a simple window with a textbox and one button.</description>
    </item>
    
  </channel>
</rss>
